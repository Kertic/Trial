<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_playerplaceholder</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variable initialization
//Initialize movement variables
hspd = 0;
vspd = 0;
maxhspd = 8;
maxvspd = 8;
vaccel = 2;
haccel = 2;

//Image settings
image_speed = 0;

// EDIT: Delay (_tb_Delay), bool _CanShoot, and ammo (_bAmmo).  
//              reloadSpeed is a delay a player has before theycan shoot again
//              _bAmmo is for how many shots can be fired.  _bAmmois commented
//               out for design purposes.
//              
// By: Evan Wilcher

reloadSpeed  = (12);
_CanShoot = true;
// _bAmmo = 100;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set _CanShoot to True
//===========================================================================
//  Project: Trial
//
//  Date:   9/25/2016
//
//  Block of Code made by GM Studio actions
//
//  Created by:  Evan Wilcher
//
//  What does it do?
//      _CanShoot = true;
//===========================================================================

_CanShoot = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_playerParent</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
var upkey = keyboard_check(ord('W'));
var rightkey = keyboard_check(ord('D'));
var downkey = keyboard_check(ord('S'));
var leftkey = keyboard_check(ord('A'));


//set movement speed based on controls
if upkey {
    if (vspd&gt;(-maxhspd))
    vspd -=vaccel;//negetive y values are actually up
}

if downkey {
    if (vspd&lt;maxvspd)
    vspd +=vaccel;
}
if (!upkey &amp;&amp; !downkey){ //Decellerate when neither up or down are pressed
    if abs(vspd) &gt; 0{
        vspd += (((vspd/abs(vspd)) * (-1)) * vaccel);
    }
}

if leftkey {
    if (hspd&gt;(-maxhspd))
    hspd -=haccel;
}

if rightkey {
    if (hspd&lt;maxhspd)
    hspd +=haccel;
}

if (!rightkey &amp;&amp; !leftkey){ //Decellerate when neither up or down are pressed
    if abs(hspd) &gt; 0{
        hspd += (((hspd/abs(hspd)) * (-1)) * haccel);
    }
}
//End movement changing from WASD


//Check for collision
if place_meeting(x+hspd, y, obj_wall) {
    hspd = 0;
}
if place_meeting(x, y+vspd, obj_wall) {
    vspd = 0;
}
if place_meeting(x+hspd, y+vspd, obj_wall) { // This one checks to ensure that you don't intersect with corners
    vspd = 0;
    hspd = 0;
}


//End collision checking



//Move it

x += hspd;//X refers to its x position 
y += vspd;//Y refers to its y position


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Image changing
if leftkey {//moving left
    image_index = 3;
}
if rightkey {//moving right
    image_index = 1;
}
if upkey {// moving up 
    image_index = 0;
}
if downkey {//moving down
    image_index = 2;
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>set_depth</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attacking test
if _CanShoot = true {
    script_execute(int_Bullet);
    alarm[0] = reloadSpeed;
    _CanShoot = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
