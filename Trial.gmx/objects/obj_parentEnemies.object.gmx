<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemySprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///obj_peSetUp
//===========================================================================
//  Project:    Trial
//
//  Date:       10/01/16
//
//  Object Action:     obj_ParentEnemies.obj_peSetUp
//
//  Writen by:  Deon Scott
//
//  This action aims to:
//  1) Create a parent object for our enemy objects. 
//  
//===========================================================================

enum enemytypes {PATROLLER = 0, CHASER = 1, STALKER = 2};
// Enemytypes is for different types of enemies the game has. Patroller walks back and forth between its markers. Stalker looks for the player, if the player is not looking directly . If the player is found and not looking directly at the stalker, the stalker will attack the player. If the player is looking directly at the stalker, the stalker will return to its last patrolling position. The chaser continously chase the player thoughout the game. 
hspd = 0;       // horizontal speed
vspd = 0;       // vertical speed
dirctn = 0;     // the direction our enemy is facing
marker = 0;     // Destination of the enemies
ptr(marker);    // Making our marker into a pointer
hlth = 100;     // The enemy's health
sight = 0;      // How far and enemy can see.
type = 0;

// We need to check int_Bullets to make sure our enemies can fire bullets.







</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
